package provider

import (
	"fmt"
	"regexp"
	"testing"

	"github.com/hashicorp/terraform-plugin-testing/helper/acctest"
	"github.com/hashicorp/terraform-plugin-testing/helper/resource"
)

func TestAccScalr{{ .Name | camel }}DataSource_basic(t *testing.T) {
	{{ .Name | lowerCamel }}Name := acctest.RandomWithPrefix("test-{{ .Name | kebab }}")

	resource.Test(t, resource.TestCase{
		PreCheck:                 func() { testAccPreCheck(t) },
		ProtoV5ProviderFactories: protoV5ProviderFactories(t),
		Steps: []resource.TestStep{
			{
				Config:      `data scalr_{{ .Name }} test {}`,
				ExpectError: regexp.MustCompile(`At least one of these attributes must be configured: \[id,name]`),
			},
			{
				Config:      `data scalr_{{ .Name }} test {id = ""}`,
				ExpectError: regexp.MustCompile("Attribute id must not be empty"),
			},
			{
				Config:      `data scalr_{{ .Name }} test {name = ""}`,
				ExpectError: regexp.MustCompile("Attribute name must not be empty"),
			},
			{
				Config: testAccScalr{{ .Name | camel }}DataSourceByIDConfig({{ .Name | lowerCamel }}Name),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttrSet("data.scalr_{{ .Name }}.test", "id"),
					resource.TestCheckResourceAttr("data.scalr_{{ .Name }}.test", "name", {{ .Name | lowerCamel }}Name),
					resource.TestCheckResourceAttr("data.scalr_{{ .Name }}.test", "account_id", defaultAccount),
				),
			},
			{
				Config: testAccScalr{{ .Name | camel }}DataSourceByNameConfig({{ .Name | lowerCamel }}Name),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttrSet("data.scalr_{{ .Name }}.test", "id"),
					resource.TestCheckResourceAttr("data.scalr_{{ .Name }}.test", "name", {{ .Name | lowerCamel }}Name),
					resource.TestCheckResourceAttr("data.scalr_{{ .Name }}.test", "account_id", defaultAccount),
				),
			},
			{
				Config: testAccScalr{{ .Name | camel }}DataSourceByIDAndNameConfig({{ .Name | lowerCamel }}Name),
				Check: resource.ComposeTestCheckFunc(
					resource.TestCheckResourceAttrSet("data.scalr_{{ .Name }}.test", "id"),
					resource.TestCheckResourceAttr("data.scalr_{{ .Name }}.test", "name", {{ .Name | lowerCamel }}Name),
					resource.TestCheckResourceAttr("data.scalr_{{ .Name }}.test", "account_id", defaultAccount),
				),
			},
		},
	})
}

func testAccScalr{{ .Name | camel }}DataSourceByIDConfig(name string) string {
	return fmt.Sprintf(`
resource scalr_{{ .Name }} test {
  name       = "%[1]s"
  account_id = "%[2]s"
}

data scalr_{{ .Name }} test {
  id         = scalr_{{ .Name }}.test.id
  account_id = "%[2]s"
}`, name, defaultAccount)
}

func testAccScalr{{ .Name | camel }}DataSourceByNameConfig(name string) string {
	return fmt.Sprintf(`
resource scalr_{{ .Name }} test {
  name       = "%[1]s"
  account_id = "%[2]s"
}

data scalr_{{ .Name }} test {
  name       = scalr_{{ .Name }}.test.name
  account_id = "%[2]s"
}`, name, defaultAccount)
}

func testAccScalr{{ .Name | camel }}DataSourceByIDAndNameConfig(name string) string {
	return fmt.Sprintf(`
resource scalr_{{ .Name }} test {
  name       = "%[1]s"
  account_id = "%[2]s"
}

data scalr_{{ .Name }} test {
  id         = scalr_{{ .Name }}.test.id
  name       = scalr_{{ .Name }}.test.name
  account_id = "%[2]s"
}`, name, defaultAccount)
}
